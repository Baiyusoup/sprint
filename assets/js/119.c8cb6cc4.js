(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{641:function(t,v,_){"use strict";_.r(v);var l=_(6),s=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"常见的请求方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的请求方法"}},[t._v("#")]),t._v(" 常见的请求方法")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("GET\n通常用来获取资源")])]),t._v(" "),_("li",[_("p",[t._v("POST\n用来提交资源")])]),t._v(" "),_("li",[_("p",[t._v("OPTIONS\n用于获取目的资源所支持的通信选项")])]),t._v(" "),_("li",[_("p",[t._v("HEAD\n获取资源的元信息，和get请求的功能一样，只不过HEAD请求的响应中，没有响应体。\n使用的场景主要是测试超链接的有效性、可用性和最近的修改。")])]),t._v(" "),_("li",[_("p",[t._v("DELETE\n用于删除资源")])]),t._v(" "),_("li",[_("p",[t._v("PUT\n用于修改或者创建资源")])]),t._v(" "),_("li",[_("p",[t._v("TRACK\n用于追踪请求-响应的传输路径")])]),t._v(" "),_("li",[_("p",[t._v("CONNECT\n用于建立连接隧道")])])]),t._v(" "),_("h2",{attrs:{id:"get和post的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[t._v("#")]),t._v(" GET和POST的区别")]),t._v(" "),_("ul",[_("li",[t._v("语义角度上看\n这时最直观的区别，GET请求用于获取资源，POST请求用于提交资源")])]),t._v(" "),_("p",[t._v("从w3schools得到的标准答案的区别如下：")]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("GET在浏览器回退时是无害的，而POST会再次提交请求。")]),t._v(" "),_("li",[t._v("GET请求会被浏览器主动cache，而POST不会，除非手动设置。")]),t._v(" "),_("li",[t._v("GET请求只能进行url编码，而POST支持多种编码方式。")]),t._v(" "),_("li",[t._v("GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。")]),t._v(" "),_("li",[t._v("GET请求在URL中传送的参数是有长度限制的，而POST没有。")]),t._v(" "),_("li",[t._v("对参数的数据类型，GET只接受ASCII字符，而POST没有限制。")]),t._v(" "),_("li",[t._v("GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。")]),t._v(" "),_("li",[t._v("GET参数通过URL传递，POST放在Request body中")])])])}),[],!1,null,null,null);v.default=s.exports}}]);