(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{564:function(t,a,r){"use strict";r.r(a);var e=r(6),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"js类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js类型"}},[t._v("#")]),t._v(" JS类型")]),t._v(" "),r("p",[t._v("在JavaScript中，共有7种类型，这7种类型又分为原始值和引用值。")]),t._v(" "),r("p",[t._v("原始值：number、string、boolean、null、undefined、symbol\n引用值：object")]),t._v(" "),r("h2",{attrs:{id:"类型转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),r("h3",{attrs:{id:"显示转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示转换"}},[t._v("#")]),t._v(" 显示转换")]),t._v(" "),r("h4",{attrs:{id:"number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number()")]),t._v(" "),r("ul",[r("li",[t._v("对于string类型的参数，如果存在一个无法转换成数值的字符，那么结果就是NaN。空字符串是为0")]),t._v(" "),r("li",[t._v("对于undefined的转换也是NaN")]),t._v(" "),r("li",[t._v("对于Null和false一样，都是0")]),t._v(" "),r("li",[t._v("对于object来说，会先调用toPrimitive，再调用valueOf，如果都不存在的话，就调用toString")])]),t._v(" "),r("h4",{attrs:{id:"string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String()")]),t._v(" "),r("p",[t._v("没什么好说的，都是自身放在一个双引号里面，只不过对于对象来说，是先调用toPrimitive，再调用toString，如果都不存在的话，就调用valueOf")]),t._v(" "),r("h4",{attrs:{id:"boolean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean()")]),t._v(" "),r("p",[t._v("转为false")]),t._v(" "),r("ul",[r("li",[t._v("空字符串")]),t._v(" "),r("li",[t._v("0和NaN")]),t._v(" "),r("li",[t._v("null")]),t._v(" "),r("li",[t._v("undefined")])]),t._v(" "),r("p",[t._v("其余都是true")]),t._v(" "),r("h3",{attrs:{id:"隐式转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),r("p",[t._v("隐式转换发生在比较运算、算术运算的时候")]),t._v(" "),r("h4",{attrs:{id:"自动转换为boolean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自动转换为boolean"}},[t._v("#")]),t._v(" 自动转换为boolean")]),t._v(" "),r("p",[t._v("系统内部会调用Boolean()来转换")]),t._v(" "),r("h4",{attrs:{id:"自动转换为string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自动转换为string"}},[t._v("#")]),t._v(" 自动转换为string")]),t._v(" "),r("p",[t._v("具体转换规则为：先将符合类型的值转变为原始类型的值，再将原始类型的值转为字符串。")]),t._v(" "),r("p",[t._v("这种转换常发生在+运算种，操作数一旦有字符串，就会进行字符串的拼接")]),t._v(" "),r("h4",{attrs:{id:"自动转换为数值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自动转换为数值"}},[t._v("#")]),t._v(" 自动转换为数值")]),t._v(" "),r("p",[t._v("除了+可能把操作数转为字符串外，其余操作符都是转成数值")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zh.javascript.info/object-toprimitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("对象的转换规则"),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);