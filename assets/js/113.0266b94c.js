(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{632:function(t,v,_){"use strict";_.r(v);var e=_(6),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"http1-0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http1-0"}},[t._v("#")]),t._v(" http1.0")]),t._v(" "),_("p",[t._v("是http协议的第二个版本，在这个版本开始，http可以发送任何格式的内容。")]),t._v(" "),_("p",[t._v("除了GET请求，还引入了POST和HEAD请求方法。")]),t._v(" "),_("p",[t._v("请求和响应的格式改变了，除了数据部分，每次通信都必须有头信息。")]),t._v(" "),_("p",[t._v("只使用Last-Modified和Expires来控制缓存的生命周期")]),t._v(" "),_("p",[t._v("该版本主要的缺点是一个请求需要两倍的往返时间RTT的开销")]),t._v(" "),_("h2",{attrs:{id:"http1-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" http1.1")]),t._v(" "),_("p",[t._v("这个版本是目前主流的http协议版本。")]),t._v(" "),_("ol",[_("li",[t._v("引入了持久连接，即不需要显式声明Connection: keep-alive")]),t._v(" "),_("li",[t._v("引入了管道机制，即同一个tcp连接里，客户端可以同时发送多个请求。")]),t._v(" "),_("li",[t._v("新增了一些头字段Cache-Control，If-None-Match，ETag来控制缓存的生命周期，比之前的更加精准控制。")]),t._v(" "),_("li",[t._v("Host头处理")]),t._v(" "),_("li",[t._v("支持断点续传")]),t._v(" "),_("li",[t._v("新增了一些请求方法。put、options、delete")])]),t._v(" "),_("p",[t._v("出现的问题是传输内容都是明文的；长连接可能会影响性能，因为有时候有些请求完之后就不会再请求；队头阻塞。")]),t._v(" "),_("p",[t._v("1.1的持续连接有两种工作方式，第一种是非流水线方式，客户端每收到一个响应后才能发出下一个请求，缺点在于服务器发送完一个响应后，TCP连接就处于空闲，浪费了服务器资源。第二种方式是客户端在收到响应报文之前就能够发送新的请求报文。")]),t._v(" "),_("h2",{attrs:{id:"http2-0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" http2.0")]),t._v(" "),_("p",[t._v("新增了一些功能")]),t._v(" "),_("ol",[_("li",[t._v("二进制分帧")]),t._v(" "),_("li",[t._v("多路复用")]),t._v(" "),_("li",[t._v("首部压缩")]),t._v(" "),_("li",[t._v("服务器推送")]),t._v(" "),_("li",[t._v("请求优先")])]),t._v(" "),_("p",[_("RouterLink",{attrs:{to:"/blogs/计算机网络/http2.html"}},[t._v("GO")])],1)])}),[],!1,null,null,null);v.default=a.exports}}]);