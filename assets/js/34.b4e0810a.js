(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{553:function(e,t,r){"use strict";r.r(t);var n=r(6),v=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"静态方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[e._v("#")]),e._v(" 静态方法")]),e._v(" "),r("ul",[r("li",[e._v("assign 通过复制一个或多个对象来创建一个新对象")]),e._v(" "),r("li",[e._v("create 使用指定的原型对象和属性创建一个新对象")]),e._v(" "),r("li",[e._v("definePrototype 给对象添加一个属性并指定该属性的配置")]),e._v(" "),r("li",[e._v("freeze 冻结一个对象")]),e._v(" "),r("li",[e._v("getPrototypeOf 返回指定对象的原型对象")]),e._v(" "),r("li",[e._v("keys 返回一个包含所有给定对象自身可枚举属性名称的数组")])]),e._v(" "),r("p",[e._v("ForIn枚举一个对象的属性（也包含原型属性）")]),e._v(" "),r("p",[e._v("object.hasOwnProperty() 检测这个属性是来自哪的")]),e._v(" "),r("p",[e._v("prop in obj 判断指定属性是否在指定对象或其原型链上")]),e._v(" "),r("p",[e._v("delete不会删除原型属性")]),e._v(" "),r("p",[e._v("configurable\nwritable\nenumerable")])])}),[],!1,null,null,null);t.default=v.exports}}]);