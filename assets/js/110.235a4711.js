(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{630:function(t,a,s){"use strict";s.r(a);var r=s(6),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"滑动窗口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口"}},[t._v("#")]),t._v(" 滑动窗口")]),t._v(" "),s("p",[t._v("发送窗口：在没有收到接收方发过来的确认的情况下，发送方可以连续吧窗口内的数据都发送出去。由发送窗口后沿和前沿共同确定窗口的位置。\n后沿只能前进和不动，前沿可以后退、不动和前进。")]),t._v(" "),s("p",[t._v("以字节为单位，在三次握手中，确认双方的接受窗口的大小。")]),t._v(" "),s("h2",{attrs:{id:"超时重传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超时重传"}},[t._v("#")]),t._v(" 超时重传")]),t._v(" "),s("p",[t._v("TCP的发送方在规定时间内没有收到确认就要重新重传以发送的报文段。")]),t._v(" "),s("h2",{attrs:{id:"流量控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流量控制"}},[t._v("#")]),t._v(" 流量控制")]),t._v(" "),s("p",[t._v("通过接收缓存区的大小，控制发送端的发送。具体实现的方式是通过滑动窗口来实现的。TCP滑动窗口分为两种：发送窗口和接收窗口。")]),t._v(" "),s("h2",{attrs:{id:"拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[t._v("#")]),t._v(" 拥塞控制")]),t._v(" "),s("p",[t._v("防止过多的数据注入网络中，使得网络中的路由器或者链路不会过载。")]),t._v(" "),s("p",[t._v("拥塞控制的算法主要有慢开始、拥塞避免、快重传和快恢复这四种。")]),t._v(" "),s("h3",{attrs:{id:"慢开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#慢开始"}},[t._v("#")]),t._v(" 慢开始")]),t._v(" "),s("p",[t._v("首先通过三次握手，确定了双方的接收窗口的大小。然后双方初始化自己的拥塞窗口大小。在开始传输的一段时间里，发送端每收到一个ACK，拥塞窗口的大小就加1，经过一个往返时间后，拥塞窗口的大小就会翻倍。")]),t._v(" "),s("p",[t._v("拥塞窗口的大小达到阈值之后，就会进入拥塞避免。")]),t._v(" "),s("h3",{attrs:{id:"拥塞避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥塞避免"}},[t._v("#")]),t._v(" 拥塞避免")]),t._v(" "),s("p",[t._v("在拥塞窗口的大小达到阈值之后，拥塞窗口的大小将按线性规律缓慢增大，经过一个RTT后，拥塞窗口的大小只会加1。")]),t._v(" "),s("h3",{attrs:{id:"快重传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快重传"}},[t._v("#")]),t._v(" 快重传")]),t._v(" "),s("p",[t._v("接收方每次收到一个失序的报文段后就要立即发送一个重复确认，发送方只要一连收到三个重复确认就要立即重传对方还没有收到的报文段。")]),t._v(" "),s("h3",{attrs:{id:"快恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快恢复"}},[t._v("#")]),t._v(" 快恢复")]),t._v(" "),s("p",[t._v("发送端收到三次重复的ACK之后，发现丢包了，就会进入快恢复阶段。在这个阶段中，发送端会")]),t._v(" "),s("ol",[s("li",[t._v("将拥塞阈值降低为当前拥塞窗口的一半。")]),t._v(" "),s("li",[t._v("直接从拥塞避免阶段开始")])])])}),[],!1,null,null,null);a.default=v.exports}}]);