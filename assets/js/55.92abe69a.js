(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{573:function(e,t,s){"use strict";s.r(t);var a=s(6),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[e._v("#")]),e._v(" clone")]),e._v(" "),s("p",[e._v("用于从远程仓库克隆一个版本库，这个命令会在本地主机生成一个目录，和克隆的那个版本库同名，如果想要指定不同的目录名，可在这个命令的第二个参数写上我们想要的目录名。")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone url\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone url "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dir")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h2",{attrs:{id:"remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remote"}},[e._v("#")]),e._v(" remote")]),e._v(" "),s("p",[e._v("给每个远程主体指定一个主机名。不带参数时，会列出所有远程主机所对应的主机名，如果加上"),s("code",[e._v("-v")]),e._v("可以看到远程主机的网址。"),s("code",[e._v("git remote add")]),e._v("用于添加远程主机。而"),s("code",[e._v("remote rm")]),e._v(" 用户删除远程主机，"),s("code",[e._v("remote rename")]),e._v("用于重命名远程主机。")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone -o origin url\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("相当于clone + remote add的结合体。")]),e._v(" "),s("h2",{attrs:{id:"fetch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[e._v("#")]),e._v(" fetch")]),e._v(" "),s("p",[e._v("这个命令用于将远程仓库的更新（commit）取回本地。默认情况下会取回所有分支的更新，如果想要取回特定分支的更新，可以在第二参数写上分支名。")]),e._v(" "),s("p",[e._v("所拉取的某分支的更新会放在"),s("code",[e._v("远程主机名/分支名")]),e._v("下，我们可以使用"),s("code",[e._v("git branch -r")]),e._v("来查看fetch下来的远程分支，如果是"),s("code",[e._v("-a")]),e._v("则是查看所有分支。")]),e._v(" "),s("h2",{attrs:{id:"pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[e._v("#")]),e._v(" pull")]),e._v(" "),s("p",[e._v("取回远程主机某个分支的更新，再和本地的指定分支合并。执行"),s("code",[e._v("git pull 远程主机名 远程分支名:本地分支名")]),e._v("，会将远程分支的更新拉去下来，和本地分支进行合并。如果打算和当前分支合并，那么可以不用指定本地分支名。")]),e._v(" "),s("p",[e._v("这个命令相当于fetch+merge的结合，如果想要fetch+rebase的结合，可以把"),s("code",[e._v("--rebase")]),e._v("放在第一个参数那里。")]),e._v(" "),s("h2",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[e._v("#")]),e._v(" push")]),e._v(" "),s("p",[e._v("用于将本地分支的更新，推送到远程主机。"),s("code",[e._v("git push 远程主机名 本地分支名:远程分支名")]),e._v("，如果忽略远程分支名，则表示将本地分支的更新推送到和本地分支有“追踪关系”的远程分支（通常是同名的），如果这个远程分支不存在，那么久就会被创建。")]),e._v(" "),s("p",[e._v("如果说忽略本地分支名，则表示删除指定的远程分支。当然如果想要删除远程分支，还可以使用"),s("code",[e._v("git push origin --delete 远程分支名")]),e._v("。")])])}),[],!1,null,null,null);t.default=r.exports}}]);