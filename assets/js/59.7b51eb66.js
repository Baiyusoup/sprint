(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{578:function(t,e,s){"use strict";s.r(e);var r=s(6),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("p",[t._v("nextTick的作用是在下次DOM更新循环结束之后执行延迟回调，在修改数据之后立即使用这个方法，可以获取更新后的dom")]),t._v(" "),s("p",[t._v("因为vue在我们修改数据之后，并不是立即更新的，而是会开一个异步更新队列，当所有数据都变化完成之后，在统一进行更新。")]),t._v(" "),s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[t._v("实现的原理是内部使用一个数组保存我们传入的回调函数。然后执行异步延迟函数，判断当前环境支持什么方法来清空那个数组。依次判断Promise.then、MutationObserver、setImmediate、setTimeout。当事件循环到了微任务或者宏任务，执行函数就会依次执行数组中的回调。")]),t._v(" "),s("p",[t._v("promise => MutationObserver => setImmediate => setTimeout")])])}),[],!1,null,null,null);e.default=a.exports}}]);