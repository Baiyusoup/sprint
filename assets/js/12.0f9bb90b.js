(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{533:function(v,l,_){"use strict";_.r(l);var i=_(6),t=Object(i.a)({},(function(){var v=this,l=v.$createElement,_=v._self._c||l;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[v._v("#")]),v._v(" 概述")]),v._v(" "),_("p",[v._v("BFC是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。在这个区域内有着一套渲染规则，决定其子元素如何布局，以及和其他元素之间的关系与作用。")]),v._v(" "),_("p",[v._v("规则")]),v._v(" "),_("ol",[_("li",[v._v("BFC区域内的元素外边距会发生重叠")]),v._v(" "),_("li",[v._v("BFC区域内的元素不会与浮动元素重叠")]),v._v(" "),_("li",[v._v("计算BFC区域的高度时，浮动元素也会参与计算")]),v._v(" "),_("li",[v._v("BFC区域内的元素与外部元素互不干扰")])]),v._v(" "),_("h2",{attrs:{id:"触发条件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#触发条件"}},[v._v("#")]),v._v(" 触发条件")]),v._v(" "),_("ol",[_("li",[v._v("根元素html")]),v._v(" "),_("li",[v._v("浮动元素，即float：left/right")]),v._v(" "),_("li",[v._v("设置overflow且值不为visible")]),v._v(" "),_("li",[v._v("行内块元素，即display：inline-block")]),v._v(" "),_("li",[v._v("弹性元素，即display：flex/inline-flex元素的直接子元素")]),v._v(" "),_("li",[v._v("网格元素，即display：grid/inline-grid元素的直接子元素")]),v._v(" "),_("li",[v._v("绝对定位元素，即position：absolute/fixed")]),v._v(" "),_("li",[v._v("表格元素")]),v._v(" "),_("li",[v._v("...")])]),v._v(" "),_("h2",{attrs:{id:"应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[v._v("#")]),v._v(" 应用")]),v._v(" "),_("ol",[_("li",[v._v("清除浮动：父元素设置overflow:hidden")]),v._v(" "),_("li",[v._v("防止margin边距塌陷")]),v._v(" "),_("li",[v._v("自适应两栏布局")])]),v._v(" "),_("h2",{attrs:{id:"外边距重叠计算方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外边距重叠计算方式"}},[v._v("#")]),v._v(" 外边距重叠计算方式")]),v._v(" "),_("ol",[_("li",[v._v("全部是正值，则取最大值；")]),v._v(" "),_("li",[v._v("有正值、有负值；则都取绝对值，用正值的最大值 — 绝对值的最大值；")]),v._v(" "),_("li",[v._v("全部是负值，则都取绝对值，然后用0减去绝对值的最大值（0 - 最大绝对值）")])])])}),[],!1,null,null,null);l.default=t.exports}}]);