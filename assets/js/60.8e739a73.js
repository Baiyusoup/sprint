(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{580:function(t,a,e){"use strict";e.r(a);var r=e(6),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"lazy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lazy"}},[t._v("#")]),t._v(" .lazy")]),t._v(" "),e("p",[t._v("v-model使用，取代 input 监听 change 事件")]),t._v(" "),e("h2",{attrs:{id:"stop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" .stop")]),t._v(" "),e("p",[t._v("调用 event.stopPropagation()")]),t._v(" "),e("h2",{attrs:{id:"capture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#capture"}},[t._v("#")]),t._v(" .capture")]),t._v(" "),e("p",[t._v("添加事件侦听器时使用 capture 模式。")]),t._v(" "),e("h2",{attrs:{id:"once"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#once"}},[t._v("#")]),t._v(" .once")]),t._v(" "),e("p",[t._v("只触发一次回调。")]),t._v(" "),e("h2",{attrs:{id:"prevent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prevent"}},[t._v("#")]),t._v(" .prevent")]),t._v(" "),e("p",[t._v("调用 event.preventDefault()")]),t._v(" "),e("h2",{attrs:{id:"native"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#native"}},[t._v("#")]),t._v(" .native")]),t._v(" "),e("p",[t._v("监听组件根元素的原生事件")]),t._v(" "),e("h2",{attrs:{id:"sync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync"}},[t._v("#")]),t._v(" .sync")]),t._v(" "),e("p",[t._v("v-bind使用，会扩展成一个更新父组件绑定值的 v-on 侦听器")])])}),[],!1,null,null,null);a.default=s.exports}}]);