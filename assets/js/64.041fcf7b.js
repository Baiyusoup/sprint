(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{582:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[t._v("vue实现数据双向绑定主要是通过数据劫持结合发布订阅来实现的。vue2的数据劫持是通过Object.definePrototype()实现的，vue3是通过Proxy实现的。")]),t._v(" "),s("p",[t._v("大致的流程是：")]),t._v(" "),s("ol",[s("li",[t._v("初始化实例的时候，对data进行响应化处理，这个过程发生在Observe中")]),t._v(" "),s("li",[t._v("同时对模板进行编译，找到模板里面动态绑定的数据，从data里面获取并处理化视图，这个过程发生在Compile中")]),t._v(" "),s("li",[t._v("由于data里面某个数据会在视图中多次出现，所有对于每个数据都会有自己的一个dep来保存多个watcher。")])]),t._v(" "),s("h2",{attrs:{id:"数据劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据劫持"}},[t._v("#")]),t._v(" 数据劫持")]),t._v(" "),s("p",[t._v("数据劫持是来劫持各个数据的setter和getter。在getter那里创建一个观察者放到这个数据的依赖中，当数据发生改变的时候，就会触发数据的setter方法，在这个方法里面，通过遍历这个数据的依赖来通知观察者对视图进行更新。")]),t._v(" "),s("h3",{attrs:{id:"object-defineprototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-defineprototype"}},[t._v("#")]),t._v(" Object.definePrototype")]),t._v(" "),s("p",[t._v("属性描述符有两种主要的形式：数据描述符和存取描述符。数据描述符是一个具有值的属性，存取描述符是由getter函数和setter函数所描述的属性。")]),t._v(" "),s("p",[t._v("数据描述符：value、writable、configurable和enumerable。")]),t._v(" "),s("p",[t._v("存取描述符：get、set")]),t._v(" "),s("p",[t._v("需要注意的是value、writable和get、set无法共存，也就是说如果这个属性有value和writable这两个数据描述符，那么就不能存在get和set这两个存取描述符。如果configurable的值是false，那么就不允许再对这个属性的属性描述符进行修改。")]),t._v(" "),s("h3",{attrs:{id:"proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target 目标对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// property 访问/修改的属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// receiver proxy或者继承proxy的对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v('需要注意的是receiver这个参数，它表示的是proxy对象或者继承proxy的对象。假设有一段代码执行obj.name = "jen"，obj 不是一个proxy，且自身不含name属性，但是它的原型链上有一个 proxy，那么，那个 proxy 的 set() 处理器会被调用，而此时，obj 会作为 receiver 参数传进来。')]),t._v(" "),s("h2",{attrs:{id:"proxy相对于defineprototype的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy相对于defineprototype的优势"}},[t._v("#")]),t._v(" Proxy相对于definePrototype的优势")]),t._v(" "),s("p",[t._v("Object.definePrototype的问题主要有三个")]),t._v(" "),s("ol",[s("li",[t._v("不能监听数组的变化，vue2中是通过重写数组的方法来实现数组的监听")]),t._v(" "),s("li",[t._v("必须遍历对象的每个属性")]),t._v(" "),s("li",[t._v("必须深层遍历嵌套的对象")])]),t._v(" "),s("p",[t._v("Proxy的优势是")]),t._v(" "),s("ol",[s("li",[t._v("针对的是整个对象，不需要遍历对象的属性")]),t._v(" "),s("li",[t._v("支持数组")]),t._v(" "),s("li",[t._v("Proxy有13中拦截方法，比Object.definePrototype更加丰富")]),t._v(" "),s("li",[t._v("Proxy作为新标准，受到浏览器厂商的重点关注和性能优化。")])]),t._v(" "),s("h2",{attrs:{id:"为什么不能通过劫持数组的索引或者长度来完成响应式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么不能通过劫持数组的索引或者长度来完成响应式"}},[t._v("#")]),t._v(" 为什么不能通过劫持数组的索引或者长度来完成响应式？")]),t._v(" "),s("p",[t._v("首先数组length属性不支持重写，通过Object.getOwnPropertyDescriptor得到的信息。")]),t._v(" "),s("p",[t._v("还有就是响应式的处理是在初始化的时候对data属性里面的数据进行遍历来完成响应式的，但是如果监听索引的话, 如果push一个元素进来, 那个元素的索引就没有被劫持, 那么就不会是响应式的, 另外对数组多半是遍历, 劫持索引的get, 性能不好。")])])}),[],!1,null,null,null);a.default=n.exports}}]);